apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-application-server
  labels:
    app.kubernetes.io/name: node-application-server
    helm.sh/chart: node-application-server
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: node-application-server
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-application-server
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: USER_DB
              valueFrom:
                secretKeyRef:
                  name: node-application-server-secret-db
                  key: userDb
            - name: PASSWORD_DB
              valueFrom:
                secretKeyRef:
                  name: node-application-server-secret-db
                  key: passwordDb
            - name: DEPLOY_NAME
              value: {{ .Release.Name | quote }}
          livenessProbe:
            httpGet:
              path: /management/status
              port: 3000
            initialDelaySeconds: 90
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /management/status
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
            timeoutSeconds: 2